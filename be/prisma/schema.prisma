generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email        String @unique
  name         String
  passwordHash String
  
  notes Note[]
  sessions Session[]
  user Category[]
  
  @@map("users")
}

model Session {
  id Int @id @default(autoincrement())
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  value String @unique
  
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Note {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  title String @unique
  slug String @unique
  content String
  
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  categories Category[] // many-to-many relationship with category
  
  @@map("notes")
}

model Category {
  id Int @id @default(autoincrement())
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  name String // we have to filter with name

  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  notes Note[] // many-to-many relationship with note

  @@index([name])
  @@unique([name, userId])
  @@map("categories")
}